[
    {
      "question": "What port does 34.76.1.22 have open?",
      "answer": "62078",
      "solution": "grep 34.76.1.22 bigscan.gnmap",
      "explanation": "This looks for \"34.76.1.22\" in the bigscan.gnmap file and shows us every place where it shows up.  In the results, we see:\n  62078/open/tcp//iphone-sync///\nThis tells us port TCP 62078 was found open by nmap.",
      "hints": [
        "You can search through a file with a command like:\n  grep ThingIWant FileName",
        "As an example, if you're looking for \"34.76.1.22\" in bigscan.gnmap, you might try:\n  grep 34.76.1.22 bigscan.gnmap"
      ]
    },
    {
      "question": "What port does 34.77.207.226 have open?",
      "answer": "8080",
      "solution": "grep 34.77.207.226 bigscan.gnmap",
      "explanation": "Like the previous challenge, this searches the nmap output file for a specific IP address.  In the output, we see TCP port 8080 is open:\n  8080/open/tcp//http-proxy///",
      "hints": [
        "OK, so you could have solved the last one by just scrolling through the file.  This question more or less forces the use of grep!",
        "You can search through a file with a command like:\n  grep ThingIWant FileName",
        "As an example, if you're looking for \"34.76.1.22\" in bigscan.gnmap, you might try:\n  grep 34.76.1.22 bigscan.gnmap"
      ]
    },
    {
      "question": "How many hosts appear \"Up\" in the scan?",
      "answer": "26054",
      "solution": "grep Up bigscan.gnmap | wc -l",
      "explanation": "Running the grep part of the command returns every line with \"Up\" in it, and wc counts the bytes, characters, words, and lines that come out of grep. Using \"-l\" only shows lines.",
      "hints": [
        "Have you noticed that the word \"Up\" appears once for each host that appeared to be online?",
        "You can use the wc utility to count lines in a file or in a command\"s output. For example, this will count lines in the output file:\n  cat bigscan.gnmap | wc -l",
        "Have you tried something like this?\n  CommandToFindUp | CommandToCountLines"
      ]
    },
    {
      "question": "How many hosts have a web port open?  (Let's just use TCP ports 80, 443, and 8080)",
      "answer": "14372",
      "solution": "grep -E \"(80|443|8080)/open\" bigscan.gnmap | wc -l",
      "explanation": "Using \"-E\" tells grep we\"re giving it a regular expression (regex).  In this case, that regex says, \"I want lines that have 8080/open, 443/open, or 80/open.\"\n  If you want to be MORE correct, you might use \"(\\s8080|\\s443|\\s80)/open\" to ensure you don't snag ports like 50080, but there weren't any in this file.",
      "hints": [
        "You can give grep a regular expression (regex) with the -E option.",
        "If you wanted to find types of fruit in a file, you might use grep -E \"(apple|banana|starfruit)\".",
        "Once we're able to search for the ports we need followed by \"/open\", we just need to count the lines that come back!"
      ]
    },
    {
      "question": "How many hosts with status Up have no (detected) open TCP ports?",
      "answer": "402",
      "solution": "echo $((`grep Up bigscan.gnmap | wc -l` - `grep Ports bigscan.gnmap | wc -l`))",
      "explanation": "Our solution is a little fancy, but the crux is this: use one grep|wc command to count how many hosts are \"Up\", and use another to count how many have \"Ports\" open.",
      "hints": [
        "How might you count how many hosts are \"Up\"?",
        "Is there a phrase that appears in lines of output that show open \"Ports\"?",
        "If you want to be fancy, you can even have Bash do the math for you:\n  echo $((`grep Something | wc -l` - `grep SomethingElse | wc -l`))"
      ]
    },
    {
      "question": "What's the greatest number of TCP ports any one host has open?",
      "answer": "12",
      "solution": "grep -E \"(open.*){12,}\" bigscan.gnmap | wc -l && grep -E \"(open.*){13,}\" bigscan.gnmap | wc -l",
      "explanation": "In our solution, we count how many lines have \"open\" in them a number of times.  We get a few for 12 and none for 13.\nOne crafty tester employed the mighty powers of awk like this:\n  awk 'BEGIN {print}{print gsub(/open/,\"\") \"\"}' bigscan.gnmap | sort -nr | head -1",
      "hints": [
        "It may be helpful grep for lines that contain a specific number of occurrences of a term.",
        "We could, for example, count the number of lines that contain \"Jolly\" five times with:\n  grep -E \"(Jolly.*){5}\" file.txt | wc -l",
        "Similarly, we could count the number of lines with six OR MORE \"Jolly\" phrases in them with:\n  grep -E \"(Jolly.*){6,}\" file.txt | wc -l",
        "Wondering about the \".*\"?  Without it, the previous command would be looking for consecutive \"Jolly\"s, e.g., \"JollyJollyJollu....\"."
      ]
    }
]
